package acme;


/**
* acme/CataloguePOA.java .
* Generated by the IDL-to-Java compiler (portable), version "3.2"
* from ../idl/acme.idl
* Thursday, 25 May 2023 13:10:15 o'clock BST
*/

public abstract class CataloguePOA extends org.omg.PortableServer.Servant
 implements acme.CatalogueOperations, org.omg.CORBA.portable.InvokeHandler
{

  // Constructors

  private static java.util.Hashtable _methods = new java.util.Hashtable ();
  static
  {
    _methods.put ("addProduct", new java.lang.Integer (0));
    _methods.put ("getProducts", new java.lang.Integer (1));
    _methods.put ("findProduct", new java.lang.Integer (2));
  }

  public org.omg.CORBA.portable.OutputStream _invoke (String $method,
                                org.omg.CORBA.portable.InputStream in,
                                org.omg.CORBA.portable.ResponseHandler $rh)
  {
    org.omg.CORBA.portable.OutputStream out = null;
    java.lang.Integer __method = (java.lang.Integer)_methods.get ($method);
    if (__method == null)
      throw new org.omg.CORBA.BAD_OPERATION (0, org.omg.CORBA.CompletionStatus.COMPLETED_MAYBE);

    switch (__method.intValue ())
    {
       case 0:  // acme/Catalogue/addProduct
       {
         try {
           acme.Product product = acme.ProductHelper.read (in);
           this.addProduct (product);
           out = $rh.createReply();
         } catch (acme.PRODUCT_TOO_EXIST $ex) {
           out = $rh.createExceptionReply ();
           acme.PRODUCT_TOO_EXISTHelper.write (out, $ex);
         }
         break;
       }

       case 1:  // acme/Catalogue/getProducts
       {
         acme.Product $result[] = null;
         $result = this.getProducts ();
         out = $rh.createReply();
         acme.ProductListHelper.write (out, $result);
         break;
       }

       case 2:  // acme/Catalogue/findProduct
       {
         try {
           String name = in.read_string ();
           acme.Product $result = null;
           $result = this.findProduct (name);
           out = $rh.createReply();
           acme.ProductHelper.write (out, $result);
         } catch (acme.PRODUCT_NOT_EXIST $ex) {
           out = $rh.createExceptionReply ();
           acme.PRODUCT_NOT_EXISTHelper.write (out, $ex);
         }
         break;
       }

       default:
         throw new org.omg.CORBA.BAD_OPERATION (0, org.omg.CORBA.CompletionStatus.COMPLETED_MAYBE);
    }

    return out;
  } // _invoke

  // Type-specific CORBA::Object operations
  private static String[] __ids = {
    "IDL:acme/Catalogue:1.0"};

  public String[] _all_interfaces (org.omg.PortableServer.POA poa, byte[] objectId)
  {
    return (String[])__ids.clone ();
  }

  public Catalogue _this() 
  {
    return CatalogueHelper.narrow(
    super._this_object());
  }

  public Catalogue _this(org.omg.CORBA.ORB orb) 
  {
    return CatalogueHelper.narrow(
    super._this_object(orb));
  }


} // class CataloguePOA
