/*
 * Copyright 2022 IBM Corporation and others.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an \"AS IS\" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * SPDX-License-Identifier: Apache-2.0
 */
package test.rmi;


/**
* test/rmi/SampleCorbaPOA.java .
* Generated by the IDL-to-Java compiler (portable), version "3.0"
* from SampleCorbaObject.idl
* Tuesday, 28 April 2015 17:10:49 o'clock BST
*/

public abstract class SampleCorbaPOA extends org.omg.PortableServer.Servant
                implements test.rmi.SampleCorbaOperations, org.omg.CORBA.portable.InvokeHandler
{

  public test.rmi.SampleCorba _this() {
     return test.rmi.SampleCorbaHelper.narrow(
        super._this_object());
  }

  public test.rmi.SampleCorba _this(org.omg.CORBA.ORB orb) {
     return test.rmi.SampleCorbaHelper.narrow(
        super._this_object(orb));
  }

  public String[] _all_interfaces(
     org.omg.PortableServer.POA poa,
     byte[] objectId) {
         return (String[])__ids.clone();
  }

  // Type-specific CORBA::Object operations
  private static String[] __ids = {
    "IDL:test/rmi/SampleCorba:1.0"};

  private static java.util.Hashtable _methods = new java.util.Hashtable ();
  static
  {
    _methods.put ("_get_i", new java.lang.Integer (0));
    _methods.put ("_set_i", new java.lang.Integer (1));
    _methods.put ("_get_s", new java.lang.Integer (2));
    _methods.put ("_set_s", new java.lang.Integer (3));
  }

  public org.omg.CORBA.portable.OutputStream _invoke (String $method,
                                org.omg.CORBA.portable.InputStream in,
                                org.omg.CORBA.portable.ResponseHandler $rh)
  {
    org.omg.CORBA.portable.OutputStream out = null;
    java.lang.Integer __method = (java.lang.Integer)_methods.get ($method);
    if (__method == null)
      throw new org.omg.CORBA.BAD_OPERATION (0, org.omg.CORBA.CompletionStatus.COMPLETED_MAYBE);

    switch (__method.intValue ())
    {
       case 0:  // test/rmi/SampleCorba/_get_i
       {
         int __result = (int)0;
         __result = this.i ();
         out = $rh.createReply();
         out.write_long (__result);
         break;
       }

       case 1:  // test/rmi/SampleCorba/_set_i
       {
         int newI = in.read_long ();
         this.i (newI);
         out = $rh.createReply();
         break;
       }

       case 2:  // test/rmi/SampleCorba/_get_s
       {
         String __result = null;
         __result = this.s ();
         out = $rh.createReply();
         out.write_string (__result);
         break;
       }

       case 3:  // test/rmi/SampleCorba/_set_s
       {
         String newS = in.read_string ();
         this.s (newS);
         out = $rh.createReply();
         break;
       }

       default:
         throw new org.omg.CORBA.BAD_OPERATION (0, org.omg.CORBA.CompletionStatus.COMPLETED_MAYBE);
    }

    return out;
  } // _invoke


} // class _SampleCorbaPOA
