/*
 * Copyright 2022 IBM Corporation and others.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an \"AS IS\" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * SPDX-License-Identifier: Apache-2.0
 */
package test.rmi;


/**
* test/rmi/SampleCorbaHelper.java .
* Generated by the IDL-to-Java compiler (portable), version "3.0"
* from SampleCorbaObject.idl
* Tuesday, 28 April 2015 17:10:49 o'clock BST
*/

abstract public class SampleCorbaHelper
{
  private static String  _id = "IDL:test/rmi/SampleCorba:1.0";

  public static void insert (org.omg.CORBA.Any a, test.rmi.SampleCorba that)
  {
    org.omg.CORBA.portable.OutputStream out = a.create_output_stream ();
    a.type (type ());
    write (out, that);
    a.read_value (out.create_input_stream (), type ());
  }

  public static test.rmi.SampleCorba extract (org.omg.CORBA.Any a)
  {
    if (!a.type().equal(type()))
        throw new org.omg.CORBA.BAD_OPERATION("extract() failed.Expected a test.rmi.SampleCorba .");
    return read (a.create_input_stream ());
  }

  private static volatile org.omg.CORBA.TypeCode __typeCode = null;
  public static org.omg.CORBA.TypeCode type ()
  {
  org.omg.CORBA.TypeCode __localTc = __typeCode;
    if (__localTc == null)
    {
      __localTc = org.omg.CORBA.ORB.init ().create_interface_tc (test.rmi.SampleCorbaHelper.id (), "SampleCorba");
      __typeCode = __localTc;
    }
    return __localTc;
  }

  public static String id ()
  {
    return _id;
  }

  public static test.rmi.SampleCorba read (org.omg.CORBA.portable.InputStream istream)
  {
    return narrow (istream.read_Object (_SampleCorbaStub.class));
  }

  public static void write (org.omg.CORBA.portable.OutputStream ostream, test.rmi.SampleCorba value)
  {
    ostream.write_Object ((org.omg.CORBA.Object) value);
  }

  public static test.rmi.SampleCorba narrow (org.omg.CORBA.Object obj)
  {
    if (obj == null)
      return null;
    else if (obj instanceof test.rmi.SampleCorba)
      return (test.rmi.SampleCorba)obj;
    else if (!obj._is_a (id ()))
      throw new org.omg.CORBA.BAD_PARAM ();
    else
    {
      org.omg.CORBA.portable.Delegate delegate = ((org.omg.CORBA.portable.ObjectImpl)obj)._get_delegate ();
      return new test.rmi._SampleCorbaStub (delegate);
    }
  }

  public static test.rmi.SampleCorba unchecked_narrow (org.omg.CORBA.Object obj)
  {
    if (obj == null)
      return null;
    else if (obj instanceof test.rmi.SampleCorba)
      return (test.rmi.SampleCorba)obj;
    else
    {
      org.omg.CORBA.portable.Delegate delegate = ((org.omg.CORBA.portable.ObjectImpl)obj)._get_delegate ();
      return new test.rmi._SampleCorbaStub (delegate);
    }
  }

}
